name: Commit Stage
on: push

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
          cache: maven
      - name: Code vulnerability scanning
        uses: anchore/scan-action@v3
        id: scan
        with:
          path: "${{ github.workspace }}"
          fail-build: false
          severity-cutoff: high
      - name: Upload vulnerability report
        uses: github/codeql-action/upload-sarif@v2
        if: success() || failure()
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}
      - name: Build, unit tests and integration tests
        run: |
          chmod +x mvnw
          ./mvnw clean test package
  package:
    name: Package and Publish
    if: ${{ github.ref == 'refs/heads/master' }}
    needs: [ build ]
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
      security-events: write
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
          cache: maven
      - name: Build container image
        run: |
          chmod +x mvnw
          ./mvnw clean package \
          spring-boot:build-image-no-fork \
          --activate-profiles prod \
          -DskipTests \
          -Ddocker.hub.user=${{secrets.DOCKER_HUB_USER}} \
          -Ddocker.hub.password=${{secrets.DOCKER_HUB_PASSWORD}}

      - name: Set Release version env variable
        run: echo "RELEASE_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV
      - name: Set Release version env variable
        run: echo "IMAGE_NAME=$(mvn help:evaluate -Dexpression=project.artifactId -q -DforceStdout)" >> $GITHUB_ENV

      - name: OCI image vulnerability scanning
        uses: anchore/scan-action@v3
        id: scan
        with:
          image: ${{ env.IMAGE_NAME }}:latest
          fail-build: false
          severity-cutoff: high
      - name: Upload vulnerability report
        uses: github/codeql-action/upload-sarif@v2
        if: success() || failure()
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}
      - name: Log into container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish container image
        run: |
          docker tag ${{secrets.DOCKER_HUB_USER}}/${{ env.IMAGE_NAME }}:latest ghcr.io/${{ github.actor }}/${{ env.IMAGE_NAME }}:latest
          docker tag ${{secrets.DOCKER_HUB_USER}}/${{ env.IMAGE_NAME }}:latest ghcr.io/${{ github.actor }}/${{ env.IMAGE_NAME }}:${{ env.RELEASE_VERSION }}
          docker push ghcr.io/${{ github.actor }}/${{ env.IMAGE_NAME }}